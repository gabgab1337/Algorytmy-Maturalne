# Iteracyjny algorytm obliczania największego wspólnego dzielnika (NWD)

funkcja NWD_iter(a, b):

    dopóki b ≠ 0:

        a, b ← b, a mod b  # Zastępuje a przez b, a b przez resztę z dzielenia a przez b

    zwróć a  # Zwraca a (które jest NWD)



# Rekurencyjny algorytm obliczania największego wspólnego dzielnika (NWD)

funkcja NWD_rek(a, b):

    jeżeli b = 0:

        zwróć a  # Jeśli b jest zerem, zwraca a (ostatnie niezerowe a)

    w przewciwnym wypadku

        zwróć NWD_rek(b, a mod b)  # W przeciwnym razie wywołuje rekurencyjnie dla (b, a mod b)



# Funkcja obliczająca najmniejszą wspólną wielokrotność (NWW)

funkcja NWW(a, b):

    zwróć a * b / NWD_iter(a, b)  # Oblicza NWW za pomocą iteracyjnie lub rekurencyjnie obliczonego NWD